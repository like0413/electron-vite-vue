# alpha、beta、main 三个分支
# 在 alpha 本地开发、提交到 beta 后自动构建作为测试用（但不发布）
# 再合并到 main（不自动构建），本地切换到 main 分支，使用 npm version 打标签，然后推送（自动构建并发布）

name: CI
on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - beta
    types:
      - closed
env:
  GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_type}}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.merged == true || startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: 设置 node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: 安装依赖
        run: pnpm install

      - name: 构建
        run: pnpm build

      - name: 获取 package.json 版本
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        shell: bash

      - name: 获取上传目录
        id: get_dir
        run: echo "dir=$(if [[ '${{ startsWith(github.ref, 'refs/tags/') }}' == 'true' ]]; then echo 'prod'; else echo 'beta'; fi)" >> $GITHUB_OUTPUT
        shell: bash

      - name: 配置 ossutil
        uses: yizhoumo/setup-ossutil@v2
        with:
          ossutil-version: '1.7.19' # latest
          endpoint: oss-cn-hangzhou.aliyuncs.com
          access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ACCESS_KEY_SECRET }}

      - name: 上传文件到 oss
        run: ossutil cp -rf release oss://like-001/tingkelai-client/${{ steps.get_dir.outputs.dir }}/

      - name: 生成发布说明
        if: startsWith(github.ref, 'refs/tags/')
        id: generate_draft
        uses: release-drafter/release-drafter@v5

      - name: 发布 Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: release/${{ steps.get_version.outputs.version }}/*
          body: ${{ steps.generate_draft.outputs.body }}
