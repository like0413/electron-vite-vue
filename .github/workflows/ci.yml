name: CI
on:
  push:
    tags:
      - 'v*.*.*'
env:
  GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_type}}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: 安装 node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm' # 不生效，暂未找到原因

      - name: 安装依赖
        run: pnpm install

      - name: 获取构建环境
        id: get-env
        run: |
          if [[ ${{ github.ref }} == refs/tags/*-beta.* ]]; then
            echo "ENV=beta" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == refs/tags/*-alpha.* ]]; then
            echo "ENV=alpha" >> $GITHUB_OUTPUT
          else
            echo "ENV=prod" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: 构建
        run: pnpm build:${{ steps.get-env.outputs.ENV}}

      - name: 配置 ossutil
        uses: yizhoumo/setup-ossutil@v2
        with:
          ossutil-version: '1.7.19' # latest
          endpoint: oss-cn-hangzhou.aliyuncs.com
          access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ACCESS_KEY_SECRET }}

      - name: 获取 package.json 版本号
        id: get-version
        shell: bash
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: 上传文件到 oss
        shell: bash
        run: |
          ossutil rm -rf oss://like-001/tingkelai-client/${{ steps.get-env.outputs.ENV }}/latest/
          ossutil cp -rf release/${{steps.get-version.outputs.VERSION}} oss://like-001/tingkelai-client/${{ steps.get-env.outputs.ENV }}/latest/
          if [[ "${{ steps.get-env.outputs.ENV }}" == "prod" ]]; then
            ossutil cp -rf release oss://like-001/tingkelai-client/${{ steps.get-env.outputs.ENV }}/
          fi

      - name: 发布 Release
        if: steps.get-env.outputs.ENV == 'prod'
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: release/${{ steps.get-version.outputs.VERSION }}/*
          body_path: CHANGELOG.md
