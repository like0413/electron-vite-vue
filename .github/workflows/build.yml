# alpha、beta、main 三个分支
# 在 alpha 本地开发、提交到 beta 后自动构建作为测试用（但不发布）
# 再合并到 main（不自动构建），本地切换到 main 分支，使用 npm version 打标签，然后推送（自动构建并发布）

name: CI
on:
  push:
    tags:
      - 'v*.*.*' # 需用 if 限制只对 main 分支生效
  pull_request:
    branches:
      - beta
    types:
      - closed
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/') || github.event.pull_request.merged == true
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - run: echo "github_event_name： ${{ github.event_name }}"
      - run: echo "github_ref_type： ${{ github.ref_type }}"
      - run: echo "github_ref_name： ${{ github.ref_name }}"
      - run: echo "github_ref： ${{ github.ref }}"
      - run: echo "github_base_ref： ${{ github.base_ref }}"
      - run: echo "github_head_ref： ${{ github.head_ref }}"

      - name: 检出代码
        uses: actions/checkout@v4
      - name: 设置 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: 设置 node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'pnpm'
      - name: 安装依赖
        run: pnpm install
      - name: 构建
        run: pnpm build
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}
          path: |
            release/*.exe
            release/*.dmg
            release/*.yml
          retention-days: 5 # 保留5天

  Release:
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/') && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    needs: Build
    steps:
      - name: 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: binary-${{ matrix.os }}
      - name: 查看构建产物
        run: ls -R
      - name: 发布
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.exe
            release/*.dmg
            release/*.yml
